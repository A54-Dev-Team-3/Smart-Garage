// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smart_Garage.Models;

#nullable disable

namespace Smart_Garage.Migrations
{
    [DbContext(typeof(SGContext))]
    [Migration("20240202132808_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Smart_Garage.Models.Mechanic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mechanics");
                });

            modelBuilder.Entity("Smart_Garage.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("Smart_Garage.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId");

                    b.ToTable("ServiceInstance");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstanceMechanic", b =>
                {
                    b.Property<int>("ServiceInstanceId")
                        .HasColumnType("int");

                    b.Property<int>("MechanicId")
                        .HasColumnType("int");

                    b.HasKey("ServiceInstanceId", "MechanicId");

                    b.HasIndex("MechanicId");

                    b.ToTable("Mechanic");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstancePart", b =>
                {
                    b.Property<int>("ServiceInstanceId")
                        .HasColumnType("int");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.HasKey("ServiceInstanceId", "PartId");

                    b.HasIndex("PartId");

                    b.ToTable("Part");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstanceService", b =>
                {
                    b.Property<int>("ServiceInstanceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("ServiceInstanceId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Smart_Garage.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Smart_Garage.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("MinLength", 2);

                    b.Property<int>("CreationYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("MinLength", 2);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");

                    b.HasCheckConstraint("CK_CreationYear", "[CreationYear] > 1867");
                });

            modelBuilder.Entity("Smart_Garage.Models.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartsTotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("ServicesTotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstance", b =>
                {
                    b.HasOne("Smart_Garage.Models.Visit", null)
                        .WithMany("ServiceInstances")
                        .HasForeignKey("VisitId");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstanceMechanic", b =>
                {
                    b.HasOne("Smart_Garage.Models.Mechanic", "Mechanic")
                        .WithMany("ServiceInstanceMechanic")
                        .HasForeignKey("MechanicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_Garage.Models.ServiceInstance", "ServiceInstance")
                        .WithMany("ServiceInstanceMechanics")
                        .HasForeignKey("ServiceInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mechanic");

                    b.Navigation("ServiceInstance");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstancePart", b =>
                {
                    b.HasOne("Smart_Garage.Models.Part", "Part")
                        .WithMany("ServiceInstanceParts")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_Garage.Models.ServiceInstance", "ServiceInstance")
                        .WithMany("ServiceInstanceParts")
                        .HasForeignKey("ServiceInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("ServiceInstance");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstanceService", b =>
                {
                    b.HasOne("Smart_Garage.Models.Service", "Service")
                        .WithMany("ServiceInstanceServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_Garage.Models.ServiceInstance", "ServiceInstance")
                        .WithMany("ServiceInstanceServices")
                        .HasForeignKey("ServiceInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("ServiceInstance");
                });

            modelBuilder.Entity("Smart_Garage.Models.Vehicle", b =>
                {
                    b.HasOne("Smart_Garage.Models.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Smart_Garage.Models.Visit", b =>
                {
                    b.HasOne("Smart_Garage.Models.Vehicle", null)
                        .WithMany("Visits")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Smart_Garage.Models.Mechanic", b =>
                {
                    b.Navigation("ServiceInstanceMechanic");
                });

            modelBuilder.Entity("Smart_Garage.Models.Part", b =>
                {
                    b.Navigation("ServiceInstanceParts");
                });

            modelBuilder.Entity("Smart_Garage.Models.Service", b =>
                {
                    b.Navigation("ServiceInstanceServices");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceInstance", b =>
                {
                    b.Navigation("ServiceInstanceMechanics");

                    b.Navigation("ServiceInstanceParts");

                    b.Navigation("ServiceInstanceServices");
                });

            modelBuilder.Entity("Smart_Garage.Models.User", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Smart_Garage.Models.Vehicle", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Smart_Garage.Models.Visit", b =>
                {
                    b.Navigation("ServiceInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
