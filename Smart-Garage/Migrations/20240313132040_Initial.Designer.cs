// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smart_Garage.Models;

#nullable disable

namespace Smart_Garage.Migrations
{
    [DbContext(typeof(SGContext))]
    [Migration("20240313132040_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Smart_Garage.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Skoda"
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.Mechanic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mechanics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Jackson Brooks"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Liam Thompson"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Mason Harper"
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.MechanicVisit", b =>
                {
                    b.Property<int>("MechanicId")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("MechanicId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("MechanicVisit");

                    b.HasData(
                        new
                        {
                            MechanicId = 1,
                            VisitId = 1
                        },
                        new
                        {
                            MechanicId = 2,
                            VisitId = 2
                        },
                        new
                        {
                            MechanicId = 3,
                            VisitId = 3
                        },
                        new
                        {
                            MechanicId = 2,
                            VisitId = 4
                        },
                        new
                        {
                            MechanicId = 3,
                            VisitId = 5
                        },
                        new
                        {
                            MechanicId = 1,
                            VisitId = 6
                        },
                        new
                        {
                            MechanicId = 2,
                            VisitId = 7
                        },
                        new
                        {
                            MechanicId = 1,
                            VisitId = 8
                        },
                        new
                        {
                            MechanicId = 3,
                            VisitId = 9
                        },
                        new
                        {
                            MechanicId = 2,
                            VisitId = 10
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "E 270"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "W223"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            IsDeleted = false,
                            Name = "GLA 200"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "x7 m60i"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "i5 m60"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            IsDeleted = false,
                            Name = "330e"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Octavia 2.0"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Superb 2.0"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 3,
                            IsDeleted = false,
                            Name = "Kodiaq 2.0"
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Parts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Timing Belt SKF VKMA 91401",
                            UnitPrice = 15.199999999999999
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Water Pump Meyle 12-34 500 6646",
                            UnitPrice = 228.0
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Oil Mercedes-Benz 5W-30, 229.51, 5L.",
                            UnitPrice = 84.0
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Spark Plug NGK IZFR6H11",
                            UnitPrice = 95.0
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Gasket Elring 538.980",
                            UnitPrice = 90.0
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Brakepads FEBI Bilstein 16666",
                            UnitPrice = 22.120000000000001
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Coolant HEPU P999 G12 2L.",
                            UnitPrice = 311.88999999999999
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Shock Absorber RIDEX 854S0086",
                            UnitPrice = 170.84
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Oxygen Sensor Bosch 0258005726",
                            UnitPrice = 16.0
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.PartVisit", b =>
                {
                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("PartId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("PartVisit");

                    b.HasData(
                        new
                        {
                            PartId = 1,
                            VisitId = 1
                        },
                        new
                        {
                            PartId = 2,
                            VisitId = 2
                        },
                        new
                        {
                            PartId = 3,
                            VisitId = 3
                        },
                        new
                        {
                            PartId = 4,
                            VisitId = 4
                        },
                        new
                        {
                            PartId = 5,
                            VisitId = 5
                        },
                        new
                        {
                            PartId = 6,
                            VisitId = 6
                        },
                        new
                        {
                            PartId = 7,
                            VisitId = 7
                        },
                        new
                        {
                            PartId = 8,
                            VisitId = 8
                        },
                        new
                        {
                            PartId = 9,
                            VisitId = 9
                        },
                        new
                        {
                            PartId = 1,
                            VisitId = 10
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Change Timing Belt",
                            Price = 25.0
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Change Water Pump",
                            Price = 100.0
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Change Oil",
                            Price = 20.0
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Change Spark Plugs",
                            Price = 15.0
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Change Gasket",
                            Price = 125.0
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Change Brakepads",
                            Price = 30.0
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Change Coolant",
                            Price = 5.0
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Change Shock Absorber",
                            Price = 50.0
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Change Oxygen Sensor",
                            Price = 10.0
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceVisit", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId", "VisitId");

                    b.HasIndex("VisitId");

                    b.ToTable("ServiceVisit");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            VisitId = 1
                        },
                        new
                        {
                            ServiceId = 2,
                            VisitId = 2
                        },
                        new
                        {
                            ServiceId = 3,
                            VisitId = 3
                        },
                        new
                        {
                            ServiceId = 4,
                            VisitId = 4
                        },
                        new
                        {
                            ServiceId = 5,
                            VisitId = 5
                        },
                        new
                        {
                            ServiceId = 6,
                            VisitId = 6
                        },
                        new
                        {
                            ServiceId = 7,
                            VisitId = 7
                        },
                        new
                        {
                            ServiceId = 8,
                            VisitId = 8
                        },
                        new
                        {
                            ServiceId = 9,
                            VisitId = 9
                        },
                        new
                        {
                            ServiceId = 1,
                            VisitId = 10
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            IsAdmin = true,
                            IsDeleted = false,
                            LastName = "admin",
                            PasswordHash = new byte[] { 108, 213, 86, 105, 75, 115, 157, 237, 105, 45, 250, 169, 143, 181, 192, 10, 54, 161, 127, 60, 199, 176, 32, 27, 27, 95, 231, 226, 156, 47, 107, 60, 102, 154, 94, 59, 168, 135, 119, 37, 121, 19, 11, 16, 181, 129, 217, 231, 151, 63, 110, 234, 10, 35, 194, 163, 77, 239, 221, 172, 123, 244, 11, 200 },
                            PasswordSalt = new byte[] { 139, 65, 228, 102, 109, 255, 168, 153, 67, 198, 232, 194, 92, 221, 174, 203, 168, 149, 9, 1, 51, 126, 157, 223, 125, 118, 18, 205, 10, 111, 23, 108, 132, 50, 76, 215, 215, 40, 215, 28, 229, 56, 135, 116, 54, 251, 17, 17, 219, 111, 60, 211, 131, 65, 135, 182, 225, 72, 254, 3, 30, 176, 210, 59, 46, 215, 133, 2, 111, 76, 166, 35, 246, 135, 157, 2, 38, 142, 16, 192, 101, 207, 119, 43, 175, 89, 169, 24, 0, 111, 179, 198, 26, 188, 67, 189, 24, 108, 135, 4, 193, 240, 66, 124, 155, 237, 99, 206, 212, 148, 240, 116, 85, 47, 190, 145, 60, 92, 26, 223, 121, 113, 3, 9, 2, 106, 1, 87 },
                            PhoneNumber = "1234567890",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "george@gmail.com",
                            FirstName = "George",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Smith",
                            PasswordHash = new byte[] { 147, 90, 57, 254, 14, 120, 124, 155, 213, 146, 80, 211, 44, 188, 77, 101, 166, 186, 15, 95, 47, 176, 0, 141, 173, 108, 234, 166, 197, 49, 7, 165, 72, 61, 229, 134, 182, 50, 47, 74, 53, 9, 132, 52, 1, 35, 132, 177, 125, 69, 75, 28, 251, 4, 141, 81, 250, 123, 193, 121, 186, 155, 127, 14 },
                            PasswordSalt = new byte[] { 179, 47, 16, 165, 120, 253, 5, 199, 23, 248, 171, 211, 231, 180, 39, 170, 93, 221, 112, 244, 169, 83, 91, 240, 88, 138, 56, 81, 254, 200, 160, 73, 179, 63, 183, 81, 204, 132, 14, 91, 213, 124, 54, 189, 187, 93, 232, 108, 211, 72, 244, 69, 219, 8, 244, 36, 40, 222, 17, 251, 40, 172, 83, 199, 190, 3, 166, 77, 21, 33, 82, 56, 57, 56, 239, 179, 159, 176, 39, 224, 186, 55, 231, 110, 3, 239, 149, 141, 49, 11, 158, 188, 34, 66, 92, 186, 245, 25, 158, 80, 229, 212, 6, 187, 160, 138, 45, 210, 90, 107, 251, 128, 208, 135, 186, 118, 201, 233, 58, 65, 219, 86, 219, 222, 80, 75, 74, 223 },
                            PhoneNumber = "1234567891",
                            Username = "george123"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alexander@gmail.com",
                            FirstName = "Alexander",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Parker",
                            PasswordHash = new byte[] { 28, 234, 244, 15, 223, 125, 252, 251, 98, 253, 11, 227, 255, 24, 99, 217, 242, 5, 136, 216, 122, 174, 199, 79, 201, 145, 120, 251, 197, 154, 22, 194, 22, 209, 190, 98, 170, 252, 121, 162, 173, 57, 141, 27, 185, 27, 209, 47, 77, 51, 12, 60, 244, 185, 188, 194, 173, 163, 30, 20, 65, 216, 205, 237 },
                            PasswordSalt = new byte[] { 20, 125, 163, 75, 6, 111, 69, 248, 218, 191, 162, 39, 224, 148, 122, 244, 93, 93, 249, 124, 58, 66, 64, 249, 200, 242, 206, 166, 214, 123, 130, 103, 37, 150, 148, 91, 114, 207, 192, 36, 140, 1, 59, 93, 27, 0, 132, 143, 95, 103, 149, 77, 121, 214, 170, 52, 31, 97, 214, 55, 19, 133, 121, 193, 79, 92, 245, 14, 24, 27, 5, 78, 255, 228, 113, 61, 194, 101, 123, 234, 202, 98, 19, 194, 193, 44, 168, 244, 111, 151, 16, 239, 9, 194, 69, 143, 67, 196, 223, 53, 56, 248, 29, 58, 188, 144, 188, 219, 254, 174, 215, 233, 41, 146, 41, 69, 10, 89, 37, 111, 115, 187, 190, 82, 79, 96, 15, 209 },
                            PhoneNumber = "1234567892",
                            Username = "alexander99"
                        },
                        new
                        {
                            Id = 4,
                            Email = "hayes@gmail.com",
                            FirstName = "Benjamin",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Hayes",
                            PasswordHash = new byte[] { 93, 185, 106, 184, 245, 250, 246, 206, 10, 244, 235, 187, 136, 37, 21, 201, 108, 228, 239, 145, 124, 139, 103, 113, 177, 251, 216, 69, 141, 237, 81, 70, 4, 118, 213, 21, 94, 2, 64, 153, 251, 173, 98, 114, 226, 122, 128, 187, 117, 168, 158, 187, 54, 105, 176, 65, 142, 58, 11, 179, 117, 240, 212, 147 },
                            PasswordSalt = new byte[] { 189, 157, 120, 176, 82, 4, 56, 229, 17, 193, 20, 242, 175, 16, 250, 193, 6, 12, 81, 29, 64, 67, 141, 10, 126, 87, 180, 32, 181, 236, 222, 141, 148, 76, 192, 59, 156, 83, 230, 141, 77, 92, 38, 9, 237, 249, 153, 221, 235, 153, 82, 27, 222, 162, 34, 250, 235, 231, 9, 45, 57, 71, 151, 39, 155, 165, 141, 22, 18, 132, 153, 148, 210, 186, 205, 194, 62, 212, 58, 114, 151, 73, 26, 102, 188, 33, 23, 242, 110, 248, 81, 103, 234, 142, 155, 89, 109, 68, 77, 146, 120, 67, 195, 25, 9, 73, 165, 3, 167, 144, 19, 19, 214, 48, 4, 156, 72, 116, 219, 86, 253, 66, 130, 221, 37, 183, 33, 36 },
                            PhoneNumber = "1234567893",
                            Username = "ben"
                        },
                        new
                        {
                            Id = 5,
                            Email = "mitchell@gmail.com",
                            FirstName = "Ethan",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Mitchell",
                            PasswordHash = new byte[] { 180, 55, 120, 209, 122, 39, 14, 186, 241, 159, 12, 195, 234, 239, 90, 119, 215, 80, 214, 17, 158, 95, 238, 236, 231, 71, 218, 210, 14, 159, 40, 222, 112, 76, 148, 149, 77, 202, 19, 142, 199, 105, 73, 162, 95, 240, 113, 251, 31, 168, 154, 6, 211, 131, 160, 63, 182, 204, 73, 115, 82, 50, 76, 186 },
                            PasswordSalt = new byte[] { 31, 198, 92, 220, 175, 63, 102, 215, 5, 70, 27, 186, 97, 61, 174, 244, 133, 98, 68, 124, 106, 227, 126, 177, 19, 220, 198, 29, 111, 250, 168, 164, 71, 126, 51, 252, 209, 183, 3, 79, 33, 242, 41, 112, 211, 103, 20, 179, 73, 199, 108, 205, 24, 87, 99, 133, 125, 58, 144, 221, 169, 129, 34, 195, 250, 149, 43, 160, 97, 243, 128, 249, 66, 158, 58, 186, 178, 115, 180, 41, 189, 207, 133, 13, 183, 160, 59, 52, 48, 78, 0, 149, 53, 228, 168, 50, 21, 186, 210, 175, 226, 28, 246, 195, 246, 228, 106, 208, 27, 105, 254, 45, 114, 252, 207, 221, 227, 219, 38, 30, 77, 45, 71, 117, 167, 135, 157, 23 },
                            PhoneNumber = "1234567894",
                            Username = "ethan Mit"
                        },
                        new
                        {
                            Id = 6,
                            Email = "reynolds@gmail.com",
                            FirstName = "Oliver",
                            IsAdmin = false,
                            IsDeleted = false,
                            LastName = "Reynolds",
                            PasswordHash = new byte[] { 138, 57, 14, 12, 252, 192, 103, 161, 244, 55, 103, 117, 90, 194, 13, 148, 14, 148, 1, 1, 21, 157, 39, 91, 107, 112, 16, 239, 255, 84, 131, 18, 103, 238, 182, 56, 144, 253, 231, 1, 166, 131, 107, 14, 100, 28, 85, 46, 174, 234, 111, 40, 166, 25, 204, 45, 9, 18, 84, 165, 100, 50, 47, 28 },
                            PasswordSalt = new byte[] { 177, 139, 105, 134, 53, 130, 16, 231, 121, 71, 48, 33, 214, 12, 77, 202, 61, 126, 162, 43, 202, 70, 52, 203, 137, 40, 148, 183, 128, 97, 113, 14, 118, 139, 143, 112, 32, 27, 245, 127, 31, 92, 34, 163, 241, 128, 251, 7, 74, 153, 174, 27, 63, 49, 198, 174, 22, 206, 206, 12, 249, 186, 249, 219, 221, 224, 202, 188, 91, 221, 65, 23, 233, 85, 216, 24, 0, 3, 14, 188, 118, 155, 196, 141, 42, 171, 170, 116, 82, 97, 136, 74, 216, 99, 248, 250, 126, 99, 170, 102, 178, 102, 155, 243, 41, 249, 226, 128, 154, 152, 49, 77, 50, 59, 47, 93, 12, 70, 105, 86, 168, 16, 54, 46, 184, 240, 153, 241 },
                            PhoneNumber = "1234567895",
                            Username = "The Oliver_6"
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreationYear")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasAnnotation("MinLength", 2);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("MinLength", 2);

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("MinLength", 2);

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationYear = 2005,
                            IsDeleted = false,
                            LicensePlate = "CA1234HH",
                            ModelId = 1,
                            UserId = 2,
                            VIN = "12345678901234567"
                        },
                        new
                        {
                            Id = 2,
                            CreationYear = 2008,
                            IsDeleted = false,
                            LicensePlate = "A1500AA",
                            ModelId = 2,
                            UserId = 2,
                            VIN = "52345678901234567"
                        },
                        new
                        {
                            Id = 3,
                            CreationYear = 2010,
                            IsDeleted = false,
                            LicensePlate = "BH7895AA",
                            ModelId = 3,
                            UserId = 3,
                            VIN = "42344678961234567"
                        },
                        new
                        {
                            Id = 4,
                            CreationYear = 2015,
                            IsDeleted = false,
                            LicensePlate = "C7894AA",
                            ModelId = 4,
                            UserId = 4,
                            VIN = "92345678991234557"
                        },
                        new
                        {
                            Id = 5,
                            CreationYear = 2013,
                            IsDeleted = false,
                            LicensePlate = "CA9635HH",
                            ModelId = 5,
                            UserId = 5,
                            VIN = "76543210987654321"
                        },
                        new
                        {
                            Id = 6,
                            CreationYear = 2017,
                            IsDeleted = false,
                            LicensePlate = "OB4579AA",
                            ModelId = 6,
                            UserId = 5,
                            VIN = "45646512637564321"
                        },
                        new
                        {
                            Id = 7,
                            CreationYear = 2009,
                            IsDeleted = false,
                            LicensePlate = "X1597AA",
                            ModelId = 7,
                            UserId = 5,
                            VIN = "96385274136925845"
                        },
                        new
                        {
                            Id = 8,
                            CreationYear = 2011,
                            IsDeleted = false,
                            LicensePlate = "PA4379HH",
                            ModelId = 8,
                            UserId = 6,
                            VIN = "14725836925836914"
                        },
                        new
                        {
                            Id = 9,
                            CreationYear = 2020,
                            IsDeleted = false,
                            LicensePlate = "TX0598AA",
                            ModelId = 9,
                            UserId = 6,
                            VIN = "15948726326159487"
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Visits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2019, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2017, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2021, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2015, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2018, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2016, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2022, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 4
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2020, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 4
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2017, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 6
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2017, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 6
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2021, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 7
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 7
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateTime(2018, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 8
                        },
                        new
                        {
                            Id = 16,
                            Date = new DateTime(2016, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 8
                        },
                        new
                        {
                            Id = 17,
                            Date = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 9
                        },
                        new
                        {
                            Id = 18,
                            Date = new DateTime(2020, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            VehicleId = 9
                        });
                });

            modelBuilder.Entity("Smart_Garage.Models.MechanicVisit", b =>
                {
                    b.HasOne("Smart_Garage.Models.Mechanic", "Mechanic")
                        .WithMany("MechanicVisits")
                        .HasForeignKey("MechanicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_Garage.Models.Visit", "Visit")
                        .WithMany("MechanicVisits")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mechanic");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("Smart_Garage.Models.Model", b =>
                {
                    b.HasOne("Smart_Garage.Models.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Smart_Garage.Models.PartVisit", b =>
                {
                    b.HasOne("Smart_Garage.Models.Part", "Part")
                        .WithMany("PartVisits")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_Garage.Models.Visit", "Visit")
                        .WithMany("PartVisits")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("Smart_Garage.Models.ServiceVisit", b =>
                {
                    b.HasOne("Smart_Garage.Models.Service", "Service")
                        .WithMany("ServiceVisits")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_Garage.Models.Visit", "Visit")
                        .WithMany("ServiceVisits")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("Smart_Garage.Models.Vehicle", b =>
                {
                    b.HasOne("Smart_Garage.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_Garage.Models.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Smart_Garage.Models.Visit", b =>
                {
                    b.HasOne("Smart_Garage.Models.Vehicle", "Vehicle")
                        .WithMany("Visits")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Smart_Garage.Models.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Smart_Garage.Models.Mechanic", b =>
                {
                    b.Navigation("MechanicVisits");
                });

            modelBuilder.Entity("Smart_Garage.Models.Part", b =>
                {
                    b.Navigation("PartVisits");
                });

            modelBuilder.Entity("Smart_Garage.Models.Service", b =>
                {
                    b.Navigation("ServiceVisits");
                });

            modelBuilder.Entity("Smart_Garage.Models.User", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Smart_Garage.Models.Vehicle", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Smart_Garage.Models.Visit", b =>
                {
                    b.Navigation("MechanicVisits");

                    b.Navigation("PartVisits");

                    b.Navigation("ServiceVisits");
                });
#pragma warning restore 612, 618
        }
    }
}
